// –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä

document.addEventListener('DOMContentLoaded', function () {
  function calculateSavings() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
    const fuelConsumption = parseFloat(document.getElementById('fuel-consumption').value) || 10;
    const annualMileage = parseFloat(document.getElementById('annual-mileage').value) || 15000;
    const petrolPrice = parseFloat(document.getElementById('petrol-price').value) || 55;
    const gasPrice = parseFloat(document.getElementById('gas-price').value) || 28;
    const gboCost = parseFloat(document.getElementById('gbo-cost').value) || 25000;
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏
    const annualPetrolCost = (annualMileage / 100) * fuelConsumption * petrolPrice;
    const annualGasCost = (annualMileage / 100) * fuelConsumption * 1.1 * gasPrice; // +10% –≤–∏—Ç—Ä–∞—Ç–∞ –≥–∞–∑—É
    const annualSaving = annualPetrolCost - annualGasCost;
    const paybackMonths = (gboCost / annualSaving) * 12;
    const per100kmSaving = (fuelConsumption * petrolPrice) - (fuelConsumption * 1.1 * gasPrice);
    const total3YearSaving = annualSaving * 3 - gboCost;
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    document.getElementById('annual-saving').textContent = Math.round(annualSaving) + ' ‚Ç¥';
    document.getElementById('payback-period').textContent = Math.round(paybackMonths) + ' –º—ñ—Å—è—Ü—ñ–≤';
    document.getElementById('per-100km').textContent = Math.round(per100kmSaving) + ' ‚Ç¥';
    document.getElementById('total-saving').textContent = Math.round(total3YearSaving) + ' ‚Ç¥';
  }
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–Ω–∞—á–µ–Ω—å
  document.querySelectorAll('input').forEach(input => {
    input.addEventListener('input', calculateSavings);
  });
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
  calculateSavings();
});

// –∫–æ–Ω–µ—Ü –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞

 document.addEventListener('DOMContentLoaded', function() {
        const faqItems = document.querySelectorAll('.faq-item');
        
        faqItems.forEach(item => {
            const question = item.querySelector('.faq-question');
            
            question.addEventListener('click', () => {
                // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ —ñ–Ω—à—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è
                faqItems.forEach(otherItem => {
                    if (otherItem !== item && otherItem.classList.contains('active')) {
                        otherItem.classList.remove('active');
                    }
                });
                
                // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
                item.classList.toggle('active');
            });
        });
        
        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –ø–µ—Ä—à–µ –ø–∏—Ç–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        if (faqItems.length > 0) {
            faqItems[0].classList.add('active');
        }
    });


    // –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û

 document.addEventListener('DOMContentLoaded', function() {
        // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
        const callbackModal = document.getElementById('callbackModal');
        const successModal = document.getElementById('successModal');
        const modalForm = document.getElementById('modalForm');
        const modalPhone = document.getElementById('modalPhone');

        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('callback-btn')) {
                if (callbackModal) {
                    callbackModal.style.display = 'block';
                    document.body.style.overflow = 'hidden';
                }
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('click', function(e) {
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫—Ä–µ—Å—Ç–∏–∫—É
            if (e.target.classList.contains('modal-close')) {
                closeAllModals();
            }
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
            if (e.target === callbackModal || e.target === successModal) {
                closeAllModals();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeAllModals();
            }
        });

        function closeAllModals() {
            if (callbackModal) callbackModal.style.display = 'none';
            if (successModal) successModal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        if (modalForm) {
            modalForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const phone = modalPhone.value;
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                if (!phone) {
                    alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É');
                    return;
                }

                // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
                const formData = {
                    name: document.getElementById('modalName').value,
                    phone: phone,
                    carModel: document.getElementById('carModel').value,
                    timestamp: new Date().toLocaleString('uk-UA')
                };

                console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);

                // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –±–æ—Ç (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω)
                // sendToTelegram(formData);

                // –ü–æ–∫–∞–∑ –æ–∫–Ω–∞ —É—Å–ø–µ—Ö–∞
                if (callbackModal) callbackModal.style.display = 'none';
                if (successModal) successModal.style.display = 'block';

                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    if (successModal) successModal.style.display = 'none';
                    document.body.style.overflow = 'auto';
                    modalForm.reset();
                }, 3000);
            });
        }

        // –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if (modalPhone) {
            modalPhone.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.startsWith('38')) {
                    value = value.substring(2);
                }
                let formattedValue = '+38 (';
                
                if (value.length > 0) {
                    formattedValue += value.substring(0, 3);
                }
                if (value.length > 3) {
                    formattedValue += ') ' + value.substring(3, 6);
                }
                if (value.length > 6) {
                    formattedValue += '-' + value.substring(6, 10);
                }
                
                e.target.value = formattedValue;
            });
        }

        // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ)
        function sendToTelegram(data) {
            const botToken = 'YOUR_BOT_TOKEN';
            const chatId = 'YOUR_CHAT_ID';
            
            const message = `üìû –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Å–∞–π—Ç—É!\n\nüë§ –Ü–º'—è: ${data.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}\nüöó –ê–≤—Ç–æ: ${data.carModel || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n‚è∞ –ß–∞—Å: ${data.timestamp}`;
            
            fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: message,
                    parse_mode: 'HTML'
                })
            })
            .then(response => response.json())
            .then(result => {
                console.log('Message sent to Telegram:', result);
            })
            .catch(error => {
                console.error('Error sending to Telegram:', error);
            });
        }
    });

// –ë–£–†–ì–ï–† –ö–ù–û–ü–ö–ê
 document.addEventListener('DOMContentLoaded', function() {
    const burgerMenu = document.querySelector('.burger-menu');
    const mobileHeaderColumn = document.querySelector('.mobile-header-colum');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç (—Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö)
    if (!burgerMenu || !mobileHeaderColumn) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
    if (window.innerWidth > 768) return;
    
    burgerMenu.addEventListener('click', function() {
        burgerMenu.classList.toggle('active');
        mobileHeaderColumn.classList.toggle('active');
        document.body.style.overflow = mobileHeaderColumn.classList.contains('active') ? 'hidden' : '';
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤ –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é
    const navLinks = document.querySelectorAll('.mobile-header-colum .nav-link');
    navLinks.forEach(link => {
        link.addEventListener('click', function() {
            burgerMenu.classList.remove('active');
            mobileHeaderColumn.classList.remove('active');
            document.body.style.overflow = '';
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ –º–µ–Ω—é
    document.addEventListener('click', function(event) {
        if (mobileHeaderColumn.classList.contains('active') && 
            !mobileHeaderColumn.contains(event.target) && 
            !burgerMenu.contains(event.target)) {
            burgerMenu.classList.remove('active');
            mobileHeaderColumn.classList.remove('active');
            document.body.style.overflow = '';
        }
    });

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ—Å–∞–π–∑
    let resizeTimer;
    window.addEventListener('resize', function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function() {
            if (window.innerWidth > 768) {
                burgerMenu.classList.remove('active');
                mobileHeaderColumn.classList.remove('active');
                document.body.style.overflow = '';
            }
        }, 250);
    });
});